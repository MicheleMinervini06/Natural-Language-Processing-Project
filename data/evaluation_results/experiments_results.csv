Run ID,Descrizione Modifica,Context Recall,Context Precision,Answer Relevancy,Faithfulness,Note
Run_01,Baseline (attuale),0.1000,0.2333,0.4426,0.6273,Problema critico nel recupero.
Run_02, Prompt NLU migliorato (few shot), 0.1667, 0.1667, 0.6810, 0.6557, Il recupero migliora leggermente. La precisione cala. La qualità della risposta migliora notevolmente grazie a un contesto leggermente migliore.
Run_03, Query Cypher Corrette, 0.1000, 0.1333, 0.6272, 0.6124, Problema persiste. Né l'analisi né le query sembrano essere il collo di bottiglia principale.
Run_04, Usato il KG creato sui dati aggregati e non raw, 0.0000, 0.0000, 0.5103, 0.0698, I risultati peggiorano. L'analisi della domanda LLM sta estraendo le entità sbagliate rendendo le nuove query specifiche inefficaci.
Run_05, Modificato il prmpt di analsi della domanda includendo una Chain Of Thought, 0.0000, 0.0000, 0.5699, 0.0008, Nessun miglioramento significativo osservato e identificato un problema di individuazione delle relationship.
Run_06, Correto il problema riguardate il matching delle relazioni(era ancora usata la vecchia funzione di match per i dati raw e non aggregati), 0.0000, 0.0000, 0.4958, 0.1982, Nessun miglioramento significativo osservato.
Run_07, Aumentato il numero di entità considerate durante la fase di analisi della domanda in quanto prima era limitato a 200, 0.0000, 0.0000, 0.6299, 0.0000, Nessun miglioramento significativo osservato.
Run_08, Corretto un errore per cui non venivano recuperati i chunk di testo nell'approccio con dati aggregati, 0.2111, 0.2000, 0.3623, 0.6338, Riscontrato un miglioramento nel recupero del contesto
Run_09, Utilizzata il KG generato con KGGen, 0.0333, 0.0333, 0.2484, 0.3057, Risultati di recupero della conoscenza scarsi ma sembra esserci un problema con le relazioni (alcune non esistono nel KG)
Run_10, Risultati ottenuti con gemini_v2 per al creazione del KG, 0.0800, 0.1667, 0.5612, 0.4475, Siamo sempre li
Run_11, Modificata la query per il retrieve della conoscenza dal KG per risolvere un problema di inconsistenza tra le relazioni esistenti e quelle cercate,,0.1133, 0.1667, 0.5743, 0.4830, Risultati simili a prima con leggero miglioramento del recall
Run_12, Migliorato il retrive della conoscenza dal KG sostituendo le query fisse con un'esplorazione dinamica del grafo guidata da termini di ricerca generati dall'LLM per una maggiore efficacia., 0.3178, 0.5000, 0.7378, 0.8310, Miglioramento significativo in tutte le metriche. La nuova strategia di recupero della conoscenza sembra molto più efficace.
Run_13, Run eseguita con stessa configuraziono della precedente (con retriver migliorato) ma sul KG originale, 0.5911, 0.6000, 0.8672, 0.9334, Ulteriore miglioramento. Sembra che il KG originale sia più completo e utile.
Run_14, Run eseguita con stessa configuraziono della precedente (con retriver migliorato) ma sul KG generato con KGGen, 0.0000, 0.0000, 0.0582, 0.4889, Crollo totale delle prestazioni. Sembra che il KG generato con KGGen sia di qualità molto inferiore rispetto al KG originale.
Run_15, Miglioramento del retrieve dell'informazione dal KG includendo gli embeddings su neo4j e una query ibrida che usa delle query esatte e gli embeddings, 0.6800, 0.7333, 0.9384, 0.9373, Ulteriore miglioramento in tutte le metriche. L'uso degli embeddings sembra aver fatto una grande differenza.